axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(size=11, face="bold"),
axis.text.y = element_text(size=11, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ylab("Themes") +
xlab("Excerpts")
p
##load packages
library(readr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(ggthemes)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(),
Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(),
Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##pivot our data to create a new 'theme' variable
themedatalong <- themedata %>% pivot_longer(cols=c('DataAndInfo',
'KnowledgeAndPerspective',
'ProgramAndOrganization',
'Technology',
'CommunitiesAndPeople',
'Crossdisciplinarity',
'Research',
'Innovation',
'Other'),
names_to='Theme',
values_to='Present')
##subset data so we can plot only those themes present in a given quote
themedatalong <- subset(themedatalong, Present == 1)
##rename
themedatalong <- themedatalong |>
mutate(across('Theme', str_replace, 'DataAndInfo', 'Data and Information'),
across('Theme', str_replace, 'KnowledgeAndPerspective', 'Knowledge and Perspectives'),
across('Theme', str_replace, 'ProgramAndOrganization', 'Programs and Organizations'),
across('Theme', str_replace, 'CommunitiesAndPeople', 'Communities and People')
)
##define the colours we want for our themes
##using Tol's accessible palette: https://personal.sron.nl/~pault/#sec:qualitative
choosecolours <- c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB")
##greyscale option
#choosecolours <- c("#333333","#575757","#6E6E6E", "#818181", "#919191", "#9F9F9F", "#ABABAB","#B7B7B7","#C2C2C2")
##make our plot
p <- ggplot(themedatalong, aes(x=Quote,
y=factor(Theme, level=c('Other',
'Innovation',
'Research',
'Crossdisciplinarity',
'Communities and People',
'Technology',
'Programs and Organizations',
'Knowledge and Perspectives',
'Data and Information'
)),
color = Theme)
) +
geom_point(size = 6, shape=15) +
scale_color_manual(breaks = c('Data and Information',
'Knowledge and Perspectives',
'Programs and Organizations',
'Technology',
'Communities and People',
'Crossdisciplinarity',
'Research',
'Innovation',
'Other'),
values = choosecolours) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none",
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x.bottom = element_text(size=11, face="bold"),
axis.text.y = element_text(size=11, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ylab("Themes") +
xlab("Excerpts")
p
##load packages
library(readr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(ggthemes)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(),
Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(),
Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##pivot our data to create a new 'theme' variable
themedatalong <- themedata %>% pivot_longer(cols=c('DataAndInfo',
'KnowledgeAndPerspective',
'ProgramAndOrganization',
'Technology',
'CommunitiesAndPeople',
'Crossdisciplinarity',
'Research',
'Innovation',
'Other'),
names_to='Theme',
values_to='Present')
##subset data so we can plot only those themes present in a given quote
themedatalong <- subset(themedatalong, Present == 1)
##rename
themedatalong <- themedatalong |>
mutate(across('Theme', str_replace, 'DataAndInfo', 'Data and Information'),
across('Theme', str_replace, 'KnowledgeAndPerspective', 'Knowledge and Perspectives'),
across('Theme', str_replace, 'ProgramAndOrganization', 'Programs and Organizations'),
across('Theme', str_replace, 'CommunitiesAndPeople', 'Communities and People')
)
##define the colours we want for our themes
##using Tol's accessible palette: https://personal.sron.nl/~pault/#sec:qualitative
choosecolours <- c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB")
##greyscale option
#choosecolours <- c("#333333","#575757","#6E6E6E", "#818181", "#919191", "#9F9F9F", "#ABABAB","#B7B7B7","#C2C2C2")
##make our plot
p <- ggplot(themedatalong, aes(x=Quote,
y=factor(Theme, level=c('Other',
'Innovation',
'Research',
'Crossdisciplinarity',
'Communities and People',
'Technology',
'Programs and Organizations',
'Knowledge and Perspectives',
'Data and Information'
)),
color = Theme)
) +
geom_point(size = 6, shape=15) +
scale_color_manual(breaks = c('Data and Information',
'Knowledge and Perspectives',
'Programs and Organizations',
'Technology',
'Communities and People',
'Crossdisciplinarity',
'Research',
'Innovation',
'Other'),
values = choosecolours) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none",
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.y = element_text(size=11, face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ylab("Themes") +
xlab("Excerpts")
p
##load packages
library(readr)
library(tidyverse)
library(cooccur)
library(visNetwork)
library(data.table)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(), Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(), Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##make quote IDs into row names
themedata2 <- themedata[,-1]
rownames(themedata2) <- themedata[,1]
#change column names
themedata2 <- themedata2 |>
rename("Communities and People" = CommunitiesAndPeople,
"Programs and Organizations" = ProgramAndOrganization,
"Knowledge and Perspectives" = KnowledgeAndPerspective,
"Data and Information" = DataAndInfo)
#transpose data frame
themedata3 <- transpose(themedata2)
#redefine row and column names
rownames(themedata3) <- colnames(themedata2)
colnames(themedata3) <- rownames(themedata2)
##do cooccurence analysis
co <- print(cooccur(themedata3, spp_names = TRUE))
##to interpret results:
##we're using a threshold to only see significant results
##if the p_lt column is <0.05 then the two terms occur together LESS frequently than expected by chance
##if the p_gt column is <0.05 then the two terms occur together MORE frequently than expected by chance
##sp1_inc is number of samples that have theme 1
##sp2_inc is number of samples that have theme 2
##obs_cooccur is the observed number of samples having both themes
##prob_cooccur is the probability that both themes occur in a sample
##exp_cooccur is the expected number of samples having both themes (assuming random distribution of themes)
##NETWORK ANALYSIS
##make nodes dataframe
##colours from https://personal.sron.nl/~pault/#sec:qualitative
nodes <- data.frame(id = 1:nrow(themedata3),
label = rownames(themedata3),
color = c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB"),
shadow = TRUE)
##now make edges dataframe from the significant cooccurences we calculated earlier
edges <- data.frame(from = co$sp1, to = co$sp2, #undirected network so to/from doesn't matter
color = ifelse(co$p_lt <= 0.05, "#B0B2C1", "#3C3F51"),
dashes = ifelse(co$p_lt <= 0.05, TRUE, FALSE))
##now plot our network (different layout options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid")
#visIgraphLayout(layout = "layout_with_kk")
#visIgraphLayout(layout = "layout_with_sugiyama")
# visNetwork(nodes = nodes, edges = edges) |>
#   visIgraphLayout(layout = "layout_on_grid")
##load packages
library(readr)
library(tidyverse)
library(cooccur)
library(visNetwork)
library(data.table)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(), Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(), Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##make quote IDs into row names
themedata2 <- themedata[,-1]
rownames(themedata2) <- themedata[,1]
#change column names
themedata2 <- themedata2 |>
rename("Communities and People" = CommunitiesAndPeople,
"Programs and Organizations" = ProgramAndOrganization,
"Knowledge and Perspectives" = KnowledgeAndPerspective,
"Data and Information" = DataAndInfo)
#transpose data frame
themedata3 <- transpose(themedata2)
#redefine row and column names
rownames(themedata3) <- colnames(themedata2)
colnames(themedata3) <- rownames(themedata2)
##do cooccurence analysis
co <- print(cooccur(themedata3, spp_names = TRUE))
##to interpret results:
##we're using a threshold to only see significant results
##if the p_lt column is <0.05 then the two terms occur together LESS frequently than expected by chance
##if the p_gt column is <0.05 then the two terms occur together MORE frequently than expected by chance
##sp1_inc is number of samples that have theme 1
##sp2_inc is number of samples that have theme 2
##obs_cooccur is the observed number of samples having both themes
##prob_cooccur is the probability that both themes occur in a sample
##exp_cooccur is the expected number of samples having both themes (assuming random distribution of themes)
##NETWORK ANALYSIS
##make nodes dataframe
##colours from https://personal.sron.nl/~pault/#sec:qualitative
nodes <- data.frame(id = 1:nrow(themedata3),
label = rownames(themedata3),
color = c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB"),
shadow = TRUE)
##now make edges dataframe from the significant cooccurences we calculated earlier
edges <- data.frame(from = co$sp1, to = co$sp2, #undirected network so to/from doesn't matter
color = ifelse(co$p_lt <= 0.05, "#B0B2C1", "#3C3F51"),
dashes = ifelse(co$p_lt <= 0.05, TRUE, FALSE))
##now plot our network (different layout options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 50))
#visIgraphLayout(layout = "layout_with_kk")
#visIgraphLayout(layout = "layout_with_sugiyama")
# visNetwork(nodes = nodes, edges = edges) |>
#   visIgraphLayout(layout = "layout_on_grid")
##load packages
library(readr)
library(tidyverse)
library(cooccur)
library(visNetwork)
library(data.table)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(), Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(), Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##make quote IDs into row names
themedata2 <- themedata[,-1]
rownames(themedata2) <- themedata[,1]
#change column names
themedata2 <- themedata2 |>
rename("Communities and People" = CommunitiesAndPeople,
"Programs and Organizations" = ProgramAndOrganization,
"Knowledge and Perspectives" = KnowledgeAndPerspective,
"Data and Information" = DataAndInfo)
#transpose data frame
themedata3 <- transpose(themedata2)
#redefine row and column names
rownames(themedata3) <- colnames(themedata2)
colnames(themedata3) <- rownames(themedata2)
##do cooccurence analysis
co <- print(cooccur(themedata3, spp_names = TRUE))
##to interpret results:
##we're using a threshold to only see significant results
##if the p_lt column is <0.05 then the two terms occur together LESS frequently than expected by chance
##if the p_gt column is <0.05 then the two terms occur together MORE frequently than expected by chance
##sp1_inc is number of samples that have theme 1
##sp2_inc is number of samples that have theme 2
##obs_cooccur is the observed number of samples having both themes
##prob_cooccur is the probability that both themes occur in a sample
##exp_cooccur is the expected number of samples having both themes (assuming random distribution of themes)
##NETWORK ANALYSIS
##make nodes dataframe
##colours from https://personal.sron.nl/~pault/#sec:qualitative
nodes <- data.frame(id = 1:nrow(themedata3),
label = rownames(themedata3),
color = c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB"),
shadow = TRUE)
##now make edges dataframe from the significant cooccurences we calculated earlier
edges <- data.frame(from = co$sp1, to = co$sp2, #undirected network so to/from doesn't matter
color = ifelse(co$p_lt <= 0.05, "#B0B2C1", "#3C3F51"),
dashes = ifelse(co$p_lt <= 0.05, TRUE, FALSE))
##now plot our network (different layout options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 20))
#visIgraphLayout(layout = "layout_with_kk")
#visIgraphLayout(layout = "layout_with_sugiyama")
# visNetwork(nodes = nodes, edges = edges) |>
#   visIgraphLayout(layout = "layout_on_grid")
##load packages
library(readr)
library(tidyverse)
library(cooccur)
library(visNetwork)
library(data.table)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(), Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(), Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##make quote IDs into row names
themedata2 <- themedata[,-1]
rownames(themedata2) <- themedata[,1]
#change column names
themedata2 <- themedata2 |>
rename("Communities and People" = CommunitiesAndPeople,
"Programs and Organizations" = ProgramAndOrganization,
"Knowledge and Perspectives" = KnowledgeAndPerspective,
"Data and Information" = DataAndInfo)
#transpose data frame
themedata3 <- transpose(themedata2)
#redefine row and column names
rownames(themedata3) <- colnames(themedata2)
colnames(themedata3) <- rownames(themedata2)
##do cooccurence analysis
co <- print(cooccur(themedata3, spp_names = TRUE))
##to interpret results:
##we're using a threshold to only see significant results
##if the p_lt column is <0.05 then the two terms occur together LESS frequently than expected by chance
##if the p_gt column is <0.05 then the two terms occur together MORE frequently than expected by chance
##sp1_inc is number of samples that have theme 1
##sp2_inc is number of samples that have theme 2
##obs_cooccur is the observed number of samples having both themes
##prob_cooccur is the probability that both themes occur in a sample
##exp_cooccur is the expected number of samples having both themes (assuming random distribution of themes)
##NETWORK ANALYSIS
##make nodes dataframe
##colours from https://personal.sron.nl/~pault/#sec:qualitative
nodes <- data.frame(id = 1:nrow(themedata3),
label = rownames(themedata3),
color = c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB"),
shadow = TRUE)
##now make edges dataframe from the significant cooccurences we calculated earlier
edges <- data.frame(from = co$sp1, to = co$sp2, #undirected network so to/from doesn't matter
color = ifelse(co$p_lt <= 0.05, "#B0B2C1", "#3C3F51"),
dashes = ifelse(co$p_lt <= 0.05, TRUE, FALSE))
##now plot our network (different layout options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 16))
#visIgraphLayout(layout = "layout_with_kk")
#visIgraphLayout(layout = "layout_with_sugiyama")
# visNetwork(nodes = nodes, edges = edges) |>
#   visIgraphLayout(layout = "layout_on_grid")
##load packages
library(readr)
library(tidyverse)
library(cooccur)
library(visNetwork)
library(data.table)
##import data
themedata <- read_csv("IH_ThemesQuant.csv",
col_types = cols(DataAndInfo = col_number(),
KnowledgeAndPerspective = col_number(),
ProgramAndOrganization = col_number(), Technology = col_number(),
CommunitiesAndPeople = col_number(),
Crossdisciplinarity = col_number(),
Research = col_number(), Innovation = col_number(),
Other = col_number()))
##replace NAs with 0
themedata[is.na(themedata)] <- 0
##make quote IDs into row names
themedata2 <- themedata[,-1]
rownames(themedata2) <- themedata[,1]
#change column names
themedata2 <- themedata2 |>
rename("Communities and People" = CommunitiesAndPeople,
"Programs and Organizations" = ProgramAndOrganization,
"Knowledge and Perspectives" = KnowledgeAndPerspective,
"Data and Information" = DataAndInfo)
#transpose data frame
themedata3 <- transpose(themedata2)
#redefine row and column names
rownames(themedata3) <- colnames(themedata2)
colnames(themedata3) <- rownames(themedata2)
##do cooccurence analysis
co <- print(cooccur(themedata3, spp_names = TRUE))
##to interpret results:
##we're using a threshold to only see significant results
##if the p_lt column is <0.05 then the two terms occur together LESS frequently than expected by chance
##if the p_gt column is <0.05 then the two terms occur together MORE frequently than expected by chance
##sp1_inc is number of samples that have theme 1
##sp2_inc is number of samples that have theme 2
##obs_cooccur is the observed number of samples having both themes
##prob_cooccur is the probability that both themes occur in a sample
##exp_cooccur is the expected number of samples having both themes (assuming random distribution of themes)
##NETWORK ANALYSIS
##make nodes dataframe
##colours from https://personal.sron.nl/~pault/#sec:qualitative
nodes <- data.frame(id = 1:nrow(themedata3),
label = rownames(themedata3),
color = c("#332288","#88CCEE","#44AA99", "#117733", "#DDCC77", "#CC6677", "#882255","#AA4499","#BBBBBB"),
shadow = TRUE)
##now make edges dataframe from the significant cooccurences we calculated earlier
edges <- data.frame(from = co$sp1, to = co$sp2, #undirected network so to/from doesn't matter
color = ifelse(co$p_lt <= 0.05, "#B0B2C1", "#3C3F51"),
dashes = ifelse(co$p_lt <= 0.05, TRUE, FALSE))
##now plot our network (different layout options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14))
#visIgraphLayout(layout = "layout_with_kk")
#visIgraphLayout(layout = "layout_with_sugiyama")
# visNetwork(nodes = nodes, edges = edges) |>
#   visIgraphLayout(layout = "layout_on_grid")
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, weight = "bold"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, strokeWidth = 1))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, strokeWidth = 5))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, face = "arial bold"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000", face = "mono"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000", face = "serif"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000", face = "sans"))
options commented out)
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000"))
visNetwork(nodes = nodes, edges = edges) |>
visIgraphLayout(layout = "layout_on_grid") |>
visNodes(font = list(size = 14, color = "#000000"))
